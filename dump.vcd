$date
	Mon Nov 12 18:03:10 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Board $end
$var wire 4 ! databus [3:0] $end
$var wire 7 " uRomAddress [6:0] $end
$var wire 8 # progbyte [7:0] $end
$var wire 4 $ operand [3:0] $end
$var wire 12 % loadAdd [11:0] $end
$var wire 1 & getAdd $end
$var wire 16 ' control [15:0] $end
$var wire 12 ( address [11:0] $end
$var wire 1 ) W $end
$var wire 2 * CarryZero [1:0] $end
$var wire 4 + Aout [3:0] $end
$var wire 4 , ALUR [3:0] $end
$var reg 1 - clk $end
$var reg 1 . reset $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0.
0-
bx ,
bx +
bx *
x)
bx (
bx '
x&
bx %
bx $
bx #
bx "
bx !
$end
#1
bx !
bx ,
b0 *
x)
b0 $
b1000111 %
b1000111 #
0&
b1111100000110111 '
bx +
b0 (
b100 "
1.
#2
b111 ,
b111 !
b100011010111101 '
b111 $
b11110101000 %
b10101000 #
1&
b1 (
b100101 "
0.
1-
#4
0-
#6
b111 ,
1)
b111 +
b111 !
b1111100000110111 '
b100110 "
1-
#8
0-
#10
b1111 ,
b1000 !
b1000 $
b100001000001 %
b1000001 #
0&
b100101001111101 '
b10 (
b1010111 "
1-
#12
0-
#14
b1111 ,
b1111 +
b1111 !
b1111100000110111 '
b1010110 "
1-
#16
0-
#18
b1 ,
b0 *
b1 !
b1 $
b101001010 %
b1001010 #
1&
b100011010111101 '
b11 (
b100111 "
1-
#20
0-
#22
b1 ,
b1 +
b1 !
b1111100000110111 '
b100110 "
1-
#24
0-
#26
b1010 ,
b1010 !
b1010 $
b101010100001 %
b10100001 #
0&
b100011010111101 '
b100 (
b100111 "
1-
#28
0-
#30
b1010 ,
0)
b1010 +
b1010 !
b1111100000110111 '
b100110 "
1-
#32
0-
#34
b1011 ,
b1 !
b1 $
b100100111 %
b100111 #
1&
b100101001111101 '
b101 (
b1010111 "
1-
#36
0-
#38
b1011 ,
1)
b1011 +
b1011 !
b1111100000110111 '
b1010110 "
1-
#40
0-
#42
b100 ,
b0 *
b111 !
b111 $
b11100101011 %
b101011 #
0&
b110000110111101 '
b110 (
b10111 "
1-
#44
0-
#46
b1011 ,
b1011 !
b1111100000110111 '
b10110 "
1-
#48
0-
#50
b0 ,
b1 *
b1011 $
b101111100101 %
b11100101 #
1&
b110000110111101 '
b111 (
b10111 "
1-
#52
0-
#54
b1011 ,
b0 *
b1011 !
b1111100000110111 '
b10100 "
1-
#56
0-
#58
b11 *
b0 ,
b101 !
b101 $
b10101000110 %
b1000110 #
0&
b100010001111101 '
b1000 (
b1110101 "
1-
#60
0-
#62
b0 ,
b1 *
0)
b0 +
b0 !
b1111100000110111 '
b1110000 "
1-
#64
0-
#66
b110 ,
b0 *
b110 !
b110 $
b11001110000 %
b1110000 #
1&
b100011010111101 '
b1001 (
b100001 "
1-
#68
0-
#70
b110 ,
b0 *
b110 +
b110 !
b1111100000110111 '
b100110 "
1-
#72
0-
#74
b110 ,
b0 *
b110 !
b0 $
b11 %
b11 #
0&
b1111100000000111 '
b1010 (
b111111 "
1-
#76
0-
#78
b10110000 %
b10110000 #
1&
b1111100000110111 '
b1011 (
b111110 "
1-
#80
0-
#82
bx ,
bx0 *
bx !
b11 %
b11 #
0&
b1100101001011111 '
b1100 (
b1011111 "
1-
#84
b1100 ,
b0 *
b110 !
0-
#86
b1100 ,
b1100 +
b1100 !
b1110000 %
b1110000 #
1&
b1111100000110111 '
b1101 (
b1011110 "
1-
#88
0-
#90
b1100 ,
b0 *
b1100 !
b10000 %
b10000 #
0&
b1111100000000111 '
b1110 (
b111011 "
1-
#92
0-
#94
b10100101 %
b10100101 #
1&
b1111100000110111 '
b1111 (
b111010 "
1-
#96
0-
#98
b1 ,
b10 *
b101 !
b101 $
b10101100000 %
b1100000 #
0&
b100101001111101 '
b10000 (
b1010011 "
1-
#100
0-
#102
b1 ,
b0 *
1)
b1 +
b1 !
b1111100000110111 '
b1010010 "
1-
#104
0-
#106
b110 ,
b110 !
b0 $
b10000 %
b10000 #
1&
b1100011010011111 '
b10001 (
b110011 "
1-
#108
b1100 ,
b1100 !
0-
#110
b1100 !
b1100 ,
0)
b1100 +
b110000 %
b110000 #
0&
b1111100000110111 '
b10010 (
b110110 "
1-
#112
0-
#114
b0 ,
b1 *
b1100 !
b11 %
b11 #
1&
b1110000110011111 '
b10011 (
b11111 "
1-
#116
b110 ,
b0 *
b110 !
0-
#118
b1100 !
b1100 ,
b11000000 %
b11000000 #
0&
b1111100000110111 '
b10100 (
b11110 "
1-
#120
0-
#122
b1100 ,
b1100 !
b0 %
b0 #
1&
b11100000110111 '
b10101 (
b1100111 "
1-
#124
0-
#126
b1000111 %
b1000111 #
0&
b1111100000110111 '
b0 (
b1100110 "
1-
#128
0-
#130
b111 ,
b111 !
b111 $
b11110101000 %
b10101000 #
1&
b100011010111101 '
b1 (
b100111 "
1-
#132
0-
#134
b111 ,
1)
b111 +
b111 !
b1111100000110111 '
b100110 "
1-
#136
0-
#138
b1111 ,
b1000 !
b1000 $
b100001000001 %
b1000001 #
0&
b100101001111101 '
b10 (
b1010111 "
1-
#140
0-
#142
b1111 ,
b1111 +
b1111 !
b1111100000110111 '
b1010110 "
1-
#144
0-
#146
b1 ,
b0 *
b1 !
b1 $
b101001010 %
b1001010 #
1&
b100011010111101 '
b11 (
b100111 "
1-
#148
0-
#150
b1 ,
b1 +
b1 !
b1111100000110111 '
b100110 "
1-

$date
	Mon Nov 12 18:50:31 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Board $end
$var wire 4 ! databus [3:0] $end
$var wire 7 " uRomAddress [6:0] $end
$var wire 8 # progbyte [7:0] $end
$var wire 4 $ operand [3:0] $end
$var wire 12 % loadAdd [11:0] $end
$var wire 1 & getAdd $end
$var wire 16 ' control [15:0] $end
$var wire 12 ( address [11:0] $end
$var wire 1 ) W $end
$var wire 2 * CarryZero [1:0] $end
$var wire 4 + Aout [3:0] $end
$var wire 4 , ALUR [3:0] $end
$var reg 1 - clk $end
$var reg 1 . reset $end
$upscope $end
$scope module Decoder $end
$var wire 4 / binary [3:0] $end
$var wire 1 0 load $end
$var reg 16 1 onehot [15:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 1
z0
bz /
0.
0-
bx ,
bx +
bx *
x)
bx (
bx '
x&
bx %
bx $
bx #
bx "
bx !
$end
#1
bx !
bx ,
b0 *
x)
b0 $
b1000111 %
b1000111 #
0&
b1111100000110111 '
bx +
b0 (
b10 "
1.
#2
b111 ,
b111 !
b111 $
b11110100010 %
b10100010 #
1&
b100011010111101 '
b1 (
b100011 "
0.
1-
#4
0-
#6
b111 ,
1)
b111 +
b111 !
b1111100000110111 '
b100000 "
1-
#8
0-
#10
b1001 ,
b10 !
b10 $
b1001110001 %
b1110001 #
0&
b100101001111101 '
b10 (
b1010001 "
1-
#12
0-
#14
b1001 ,
b1001 +
b1001 !
b1111100000110111 '
b1010000 "
1-
#16
0-
#18
b1001 ,
b1001 !
b1 $
b100000001 %
b1 #
1&
b1111100000000111 '
b11 (
b111001 "
1-
#20
0-
#22
b101001001 %
b1001001 #
0&
b1111100000110111 '
b100 (
b111000 "
1-
#24
0-
#26
b1001 $
b100101110000 %
b1110000 #
1&
b100011010111101 '
b101 (
b100001 "
1-
#28
0-
#30
b1001 !
b1111100000110111 '
b100000 "
1-
#32
0-
#34
b1001 ,
b0 *
b1001 !
b0 $
b100 %
b100 #
0&
b1111100000000111 '
b110 (
b111011 "
1-
#36
0-
#38
b10110001 %
b10110001 #
1&
b1111100000110111 '
b111 (
b111010 "
1-
#40
0-
#42
bx ,
bx0 *
bx !
b1 $
b100000001 %
b1 #
0&
b1100101001011111 '
b1000 (
b1011011 "
1-
#44
b10 ,
b10 *
b1001 !
0-
#46
b10 ,
b0 *
0)
b10 +
b10 !
b100000000 %
b0 #
1&
b1111100000110111 '
b1001 (
b1011100 "
1-
#48
0-
#50
b10 ,
b10 !
b0 $
b1 %
b1 #
0&
b11100000110111 '
b1010 (
b1 "
1-
#52
0-
#54
b10100010 %
b10100010 #
1&
b1111100000110111 '
b1 (
b0 "
1-
#56
0-
#58
b100 ,
b10 $
b1001110001 %
b1110001 #
0&
b100101001111101 '
b10 (
b1010001 "
1-
#60
0-
#62
b100 ,
b100 +
b100 !
b1111100000110111 '
b1010000 "
1-
#64
0-
#66
b100 ,
b100 !
b1 $
b100000001 %
b1 #
1&
b1111100000000111 '
b11 (
b111001 "
1-
#68
0-
#70
b101001001 %
b1001001 #
0&
b1111100000110111 '
b100 (
b111000 "
1-
#72
0-
#74
b1001 ,
b1001 !
b1001 $
b100101110000 %
b1110000 #
1&
b100011010111101 '
b101 (
b100001 "
1-
#76
0-
#78
b1001 ,
1)
b1001 +
b1001 !
b1111100000110111 '
b100000 "
1-
#80
0-
#82
b1001 ,
b0 *
b1001 !
b0 $
b100 %
b100 #
0&
b1111100000000111 '
b110 (
b111011 "
1-
#84
0-
#86
b10110001 %
b10110001 #
1&
b1111100000110111 '
b111 (
b111010 "
1-
#88
0-
#90
b10 ,
b10 *
b1001 !
b1 $
b100000001 %
b1 #
0&
b1100101001011111 '
b1000 (
b1011011 "
1-
#92
b1101 ,
b0 *
b100 !
0-
#94
b1101 ,
b1101 +
b1101 !
b100000000 %
b0 #
1&
b1111100000110111 '
b1001 (
b1011000 "
1-
#96
0-
#98
b1101 ,
b0 *
b1101 !
b0 $
b1 %
b1 #
0&
b1111100000110111 '
b1010 (
b101 "
1-
#100
0-
#102
b11000000 %
b11000000 #
1&
b1011 (
b100 "
1-
#104
0-
#106
b11100000110111 '
b0 %
b0 #
0&
b1100 (
b1100101 "
1-
#108
0-
#110
b1000111 %
b1000111 #
b1111100000110111 '
b0 (
b1100100 "
1-
#112
0-
#114
b111 ,
b111 !
b111 $
b11110100010 %
b10100010 #
1&
b100011010111101 '
b1 (
b100101 "
1-
#116
0-
#118
b111 ,
b111 +
b111 !
b1111100000110111 '
b100000 "
1-
#120
0-
#122
b1001 ,
b10 !
b10 $
b1001110001 %
b1110001 #
0&
b100101001111101 '
b10 (
b1010001 "
1-
#124
0-
#126
b1001 ,
b1001 +
b1001 !
b1111100000110111 '
b1010000 "
1-
#128
0-
#130
b1001 ,
b1001 !
b1 $
b100000001 %
b1 #
1&
b1111100000000111 '
b11 (
b111001 "
1-
#132
0-
#134
b101001001 %
b1001001 #
0&
b1111100000110111 '
b100 (
b111000 "
1-
#136
0-
#138
b1001 $
b100101110000 %
b1110000 #
1&
b100011010111101 '
b101 (
b100001 "
1-
#140
0-
#142
b1001 !
b1111100000110111 '
b100000 "
1-
#144
0-
#146
b1001 ,
b0 *
b1001 !
b0 $
b100 %
b100 #
0&
b1111100000000111 '
b110 (
b111011 "
1-
#148
0-
#150
b10110001 %
b10110001 #
1&
b1111100000110111 '
b111 (
b111010 "
1-
